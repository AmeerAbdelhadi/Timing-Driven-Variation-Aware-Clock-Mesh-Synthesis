.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "DialogBox 3"
.TH DialogBox 3 "2007-11-17" "perl v5.8.5" "User Contributed Perl Documentation"
.SH "NAME"
Tk::DialogBox \- create and manipulate a dialog screen.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 6
\&    use Tk::DialogBox
\&    ...
\&    $d = $top->DialogBox(-title => "Title", -buttons => ["OK", "Cancel"]);
\&    $w = $d->add(Widget, args)->pack;
\&    ...
\&    $button = $d->Show;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBDialogBox\fR is very similar to \fBDialog\fR except that it allows
any widget in the top Frame. \fBDialogBox\fR creates two
Frames, \fItop\fR and \fIbottom\fR. The bottom Frame shows all the
specified Buttons, lined up from left to right. The top Frame acts
as a container for all other widgets that can be added with the
\&\fB\f(BIadd()\fB\fR method.
.SH "OPTIONS"
.IX Header "OPTIONS"
The options recognized by \fBDialogBox\fR are as follows:
.IP "\fB\-title\fR" 4
.IX Item "-title"
Specify the title of the DialogBox. If this is not set, then the
name of the program is used.
.IP "\fB\-buttons\fR" 4
.IX Item "-buttons"
The button names to display in the bottom Frame. This is a reference
to an array of strings containing the text to put on each
Button. There is no default value for this. If you do not specify any
button names, no Buttons are displayed.
.IP "\fB\-default_button\fR" 4
.IX Item "-default_button"
Specifies the default Button that is considered invoked when user
presses <Return> on the DialogBox. This Button is highlighted. If
no default Button is specified, then the first element of the
array whose reference is passed to the \fB\-buttons\fR option is used
as the default.
.IP "\fB\-cancel_button\fR" 4
.IX Item "-cancel_button"
Specifies the Button that is considered invoked when the user closes
the DialogBox using the window manager's close button. If the
\&\fB\-cancel_button\fR option is not given, and if there's only one button
configured, then this button is also used as the cancel button.
Otherwise no button is considered as the cancel button; in such a case
\&\fBShow\fR just returns \f(CW\*(C`undef\*(C'\fR when the user closes the DialogBox.
.IP "\fB\-command\fR" 4
.IX Item "-command"
A callback which is executed after invoking an action to close the
DialogBox, but before restoring focus and grab information. The
selected button is passed as the first argument.
.IP "\fB\-focus\fR" 4
.IX Item "-focus"
Specify the widget to receive the initial focus after popping up the
DialogBox. By default the \fB\-default_button\fR widget receives the
initial focus.
.IP "\fB\-showcommand\fR" 4
.IX Item "-showcommand"
A callback which is executed before displaying the DialogBox and
waiting for user input. The DialogBox itself is passed as the first
argument.
.SH "METHODS"
.IX Header "METHODS"
\&\fBDialogBox\fR supports only two methods as of now:
.IP "\fBadd(\fR\fIwidget\fR, \fIoptions\fR\fB)\fR" 4
.IX Item "add(widget, options)"
Add the widget indicated by \fIwidget\fR. \fIWidget\fR can be the name
of any Tk widget (standard or contributed). \fIoptions\fR are the
options that the widget accepts. The widget is advertized as a
subwidget of \fBDialogBox\fR. The name of \fIwidget\fR is
lower-cased and used as the advertised name. If multiple instances of
\&\fIwidget\fR are created in the \fBDialogBox\fR, then only the last one gets
the advertised name. \fB\f(BIadd()\fB\fR does not automatically \fB\f(BIpack()\fB\fR or
\&\fB\f(BIgrid()\fB\fR \fIwidget\fR into the \fBDialogBox\fR.
.IP "\fBShow(\fR\fI?\-global?\fR\fB)\fR" 4
.IX Item "Show(?-global?)"
Displays the Dialog until the user invokes one of the Buttons in the
bottom Frame. If the grab type \fI\-global\fR is specified, then \fBShow\fR
uses that grab; otherwise it defaults to a local grab. Returns the
name of the Button invoked.
.Sp
The actual Dialog is shown using the \fBPopup\fR method. Any other
options supplied to \fBShow\fR are passed to \fBPopup\fR, and can be used to
position the Dialog on the screen. Please read Tk::Popup for details.
.IP "\fB\f(BIExit()\fB\fR" 4
.IX Item "Exit()"
Close the dialogbox, by emulating a click on the default button.
.SH "ADVERTISED WIDGETS"
.IX Header "ADVERTISED WIDGETS"
.IP "\fBtop\fR" 4
.IX Item "top"
The subwidget reference to the top half of the DialogBox widget, the Frame
containing widgets added by the \fBadd\fR method.
.IP "\fBbottom\fR" 4
.IX Item "bottom"
The subwidget reference to the bottom half of the DialogBox widget, the Frame
containing the Button widgets.
.ie n .IP "\fBB_""button\-text""\fR" 4
.el .IP "\fBB_``button\-text''\fR" 4
.IX Item "B_button-text"
Individual subwidget references to the Buttons in the DialogBox widget. The
subwidget name is the string \fIB_\fR concatenated with the Button's \-text
value.
.SH "BUGS"
.IX Header "BUGS"
There is no way of removing a widget once it has been added to the
top Frame, unless you access the \fItop\fR subwidget and go through the
child widgets.
.PP
There is no control over the appearance of the Buttons in the
bottom Frame nor is there any way to control the placement of the
two Frames with respect to each other.
.SH "AUTHOR"
.IX Header "AUTHOR"
\&\fBRajappa Iyer\fR rsi@earthling.net
.PP
This code is distributed under the same terms as Perl.
