.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Toplevel 3"
.TH Toplevel 3 "2007-11-17" "perl v5.8.5" "User Contributed Perl Documentation"
.SH "NAME"
Tk::Toplevel \- Create and manipulate Toplevel widgets
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\ \fI$toplevel\fR = \fI$parent\fR\->\fBToplevel\fR(?\fIoptions\fR?);
.SH "STANDARD OPTIONS"
.IX Header "STANDARD OPTIONS"
\&\fB\-borderwidth\fR	\fB\-highlightbackground\fR	\fB\-highlightthickness\fR	\fB\-takefocus\fR
\&\fB\-class\fR	\fB\-highlightcolor\fR	\fB\-relief\fR
\&\fB\-cursor\fR
.PP
See Tk::options for details of the standard options.
.SH "WIDGET-SPECIFIC OPTIONS"
.IX Header "WIDGET-SPECIFIC OPTIONS"
.IP "Name:	\fBbackground\fR" 4
.IX Item "Name:	background"
.PD 0
.IP "Class:	\fBBackground\fR" 4
.IX Item "Class:	Background"
.IP "Switch:	\fB\-background\fR" 4
.IX Item "Switch:	-background"
.PD
This option is the same as the standard \fBbackground\fR option
except that its value may also be specified as an undefined value.
In this case, the widget will display no background or border, and
no colors will be consumed from its colormap for its background
and border.
.IP "Name:	\fBcolormap\fR" 4
.IX Item "Name:	colormap"
.PD 0
.IP "Class:	\fBColormap\fR" 4
.IX Item "Class:	Colormap"
.IP "Switch:	\fB\-colormap\fR" 4
.IX Item "Switch:	-colormap"
.PD
Specifies a colormap to use for the window.
The value may be either \fBnew\fR, in which case a new colormap is
created for the window and its children, or the name of another
window (which must be on the same screen and have the same visual
as \f(CW$widget\fR), in which case the new window will use the colormap
from the specified window.
If the \fBcolormap\fR option is not specified, the new window
uses the default colormap of its screen.
This option may not be changed with the \fBconfigure\fR
method.
.IP "Name:	\fBcontainer\fR" 4
.IX Item "Name:	container"
.PD 0
.IP "Class:	\fBContainer\fR" 4
.IX Item "Class:	Container"
.IP "Switch:	\fB\-container\fR" 4
.IX Item "Switch:	-container"
.PD
The value must be a boolean.  If true, it means that this window will
be used as a container in which some other application will be embedded
(for example, a Tk toplevel can be embedded using the \fB\-use\fR option).
The window will support the appropriate window manager protocols for
things like geometry requests.  The window should not have any
children of its own in this application.
This option may not be changed with the \fBconfigure\fR
method.
.IP "Name:	\fBheight\fR" 4
.IX Item "Name:	height"
.PD 0
.IP "Class:	\fBHeight\fR" 4
.IX Item "Class:	Height"
.IP "Switch:	\fB\-height\fR" 4
.IX Item "Switch:	-height"
.PD
Specifies the desired height for the window in any of the forms
acceptable to \fBTk_GetPixels\fR.
If this option is less than or equal to zero then the window will
not request any size at all.
.IP "Name:	\fBmenu\fR" 4
.IX Item "Name:	menu"
.PD 0
.IP "Class:	\fBMenu\fR" 4
.IX Item "Class:	Menu"
.IP "Switch:	\fB\-menu\fR" 4
.IX Item "Switch:	-menu"
.PD
Specifies a menu widget to be used as a menubar. On the Macintosh, the
menubar will be displayed accross the top of the main monitor. On
Microsoft Windows and all \s-1UNIX\s0 platforms, the menu will appear accross
the toplevel window as part of the window dressing maintained by the
window manager.
.ie n .IP "Name:	\fB""""\fR" 4
.el .IP "Name:	\fB``''\fR" 4
.IX Item "Name:	"""""
.PD 0
.ie n .IP "Class:	\fB""""\fR" 4
.el .IP "Class:	\fB``''\fR" 4
.IX Item "Class:	"""""
.IP "Switch:	\fB\-screen\fR" 4
.IX Item "Switch:	-screen"
.PD
Specifies the screen on which to place the new window.
Any valid screen name may be used, even one associated with a
different display.
Defaults to the same screen as its parent.
This option is special in that it may not be specified via the option
database, and it may not be modified with the \fBconfigure\fR
method.
.IP "Switch:	\fB\-title\fR" 4
.IX Item "Switch:	-title"
Specifies the title of the toplevel window.
.IP "Name:	\fBuse\fR" 4
.IX Item "Name:	use"
.PD 0
.IP "Class:	\fBUse\fR" 4
.IX Item "Class:	Use"
.IP "Switch:	\fB\-use\fR" 4
.IX Item "Switch:	-use"
.PD
This option is used for embedding. If the value isn't an empty string,
it must be the the window identifier of a container window, specified as
a hexadecimal string like the ones returned by the \fBwinfo id\fR
command. The toplevel widget will be created as a child of the given
container instead of the root window for the screen.  If the container
window is in a Tk application, it must be a frame or toplevel widget for
which the \fB\-container\fR option was specified.
This option may not be changed with the \fBconfigure\fR
method.
.IP "Name:	\fBvisual\fR" 4
.IX Item "Name:	visual"
.PD 0
.IP "Class:	\fBVisual\fR" 4
.IX Item "Class:	Visual"
.IP "Switch:	\fB\-visual\fR" 4
.IX Item "Switch:	-visual"
.PD
Specifies visual information for the new window in any of the
forms accepted by \fBTk_GetVisual\fR.
If this option is not specified, the new window will use the default
visual for its screen.
The \fBvisual\fR option may not be modified with the \fBconfigure\fR
method.
.IP "Name:	\fBwidth\fR" 4
.IX Item "Name:	width"
.PD 0
.IP "Class:	\fBWidth\fR" 4
.IX Item "Class:	Width"
.IP "Switch:	\fB\-width\fR" 4
.IX Item "Switch:	-width"
.PD
Specifies the desired width for the window in any of the forms
acceptable to \fBTk_GetPixels\fR.
If this option is less than or equal to zero then the window will
not request any size at all.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fBToplevel\fR method creates a new toplevel widget (given
by the \f(CW$widget\fR argument).  Additional
options, described above, may be specified on the command line
or in the option database
to configure aspects of the toplevel such as its background color
and relief.  The \fBtoplevel\fR command returns the
path name of the new window.
.PP
A toplevel is similar to a frame except that it is created as a
top-level window:  its X parent is the root window of a screen
rather than the logical parent from its path name.  The primary
purpose of a toplevel is to serve as a container for dialog boxes
and other collections of widgets.  The only visible features
of a toplevel are its background color and an optional 3\-D border
to make the toplevel appear raised or sunken.
.SH "WIDGET METHODS"
.IX Header "WIDGET METHODS"
The \fBToplevel\fR method creates a widget object.
This object supports the \fBconfigure\fR and \fBcget\fR methods
described in Tk::options which can be used to enquire and
modify the options described above.
The widget also inherits all the methods provided by the generic
Tk::Widget class, and the Tk::Wm class.
.SH "BINDINGS"
.IX Header "BINDINGS"
When a new toplevel is created, it has no default event bindings:
toplevels are not intended to be interactive.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Tk::Widget
Tk::Wm
.SH "KEYWORDS"
.IX Header "KEYWORDS"
toplevel, widget
