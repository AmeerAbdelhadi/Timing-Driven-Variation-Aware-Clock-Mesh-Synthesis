=head1 NAME

Math::Polygon::Transform - Polygon transformation

=head1 INHERITANCE

 Math::Polygon::Transform
   is a Exporter

=head1 SYNOPSIS

 my @poly = ( [1,2], [2,4], [5,7], [1, 2] );

 my $area = polygon_transform resize => 3.14, @poly;

=head1 DESCRIPTION

This package contains polygon transformation algorithms.

=head1 FUNCTIONS

B<polygon_grid>(OPTIONS, LIST-OF-POINTS)

=over 4

Snap the polygon points to grid points, where artifacts are removed.

 Option--Default
 raster  1.0

. raster => FLOAT

=over 4

The raster size, which determines the points to round to.  The origin
C<[0,0]> is always on a grid-point.  When the raster value is zero,
no transformation will take place.

=back

=back

B<polygon_mirror>(OPTIONS, LIST-OF-POINTS)

=over 4

Mirror the polygon in a line.  Only one of the options can be provided.
Some programs call this "flip" or "flop".

 Option--Default
 b       0
 line    <undef>
 rc      undef
 x       undef
 y       undef

. b => FLOAT

=over 4

Only used in combination with option C<rc> to describe a line.

=back

. line => [POINT, POINT]

=over 4

Alternative way to specify the mirror line.  The C<rc> and C<b> are
computed from the two points of the line.

=back

. rc => FLOAT

=over 4

Description of the line which is used to mirror in. The line is
C<y= rc*x+b>.  The C<rc> equals C<-dy/dx>, the firing angle.  If
C<undef> is explicitly specified then C<b> is used as constant x: it's
a vertical mirror.

=back

. x => FLOAT

=over 4

Mirror in the line C<x=value>, which means that C<y> stays unchanged.

=back

. y => FLOAT

=over 4

Mirror in the line C<y=value>, which means that C<x> stays unchanged.

=back

=back

B<polygon_move>(OPTIONS, LIST-OF-POINTS)

=over 4

Returns a list of points which are moved over the indicated distance

 Option--Default
 dx      0
 dy      0

. dx => FLOAT

=over 4

Displacement in the horizontal direction.

=back

. dy => FLOAT

=over 4

Displacement in the vertical direction.

=back

=back

B<polygon_resize>(OPTIONS, LIST-OF-POINTS)

=over 4

 Option--Default
 center  [0,0]
 scale   1.0
 xscale  <scale>
 yscale  <scale>

. center => POINT

. scale => FLOAT

=over 4

Resize the polygon with the indicated factor.  When the factor is larger
than 1, the resulting polygon with grow, when small it will be reduced in
size.  The scale will be respective from the center.

=back

. xscale => FLOAT

=over 4

Specific scaling factor in the horizontal direction.

=back

. yscale => FLOAT

=over 4

Specific scaling factor in the vertical direction.

=back

=back

B<polygon_rotate>(OPTIONS, LIST-OF-POINTS)

=over 4

 Option --Default
 center   [0,0]
 degrees  0
 radians  0

. center => POINT

. degrees => FLOAT

=over 4

specify rotation angle in degrees (between -180 and 360).

=back

. radians => FLOAT

=over 4

specify rotation angle in rads (between -pi and 2*pi)

=back

=back

B<polygon_simplify>(OPTIONS, LIST-OF-POINTS)

=over 4

 Option    --Default
 max_points  undef
 same        0.0001
 slope       undef

. max_points => INTEGER

=over 4

First, C<same> and C<slope> reduce the number of points.  Then, if there
are still more than the specified number of points left, the points with
the widest angles will be removed until the specified maximum number is
reached.

=back

. same => FLOAT

=over 4

The distance between two points to be considered "the same" point.  The value
is used as radius of the circle.

=back

. slope => FLOAT

=over 4

With three points X(n),X(n+1),X(n+2), the point X(n+1) will be removed if
the length of the path over all three points is less than C<slope> longer
than the direct path between X(n) and X(n+2).

The slope will not be removed around the starting point of the polygon.
Removing points will change the area of the polygon.

=back

=back

=head1 DIAGNOSTICS

Error: you need to specify 'x', 'y', 'rc', or 'line'

=over 4

=back

=head1 SEE ALSO

This module is part of Math-Polygon distribution version 1.00,
built on February 01, 2008. Website: F<http://perl.overmeer.net/geo/>

=head1 LICENSE

Copyrights 2004,2006-2008 by Mark Overmeer. For other contributors see ChangeLog.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See F<http://www.perl.com/perl/misc/Artistic.html>

